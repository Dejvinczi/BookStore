name: "bookstore-dev"

services:
  api:
    build:
      context: api
      dockerfile: Dockerfile
      target: development
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_USER_PASSWORD=${DB_USER_PASSWORD}
      - PYDEVD_DISABLE_FILE_VALIDATION=1
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - ./api/config:/api/config
      - ./api/apps:/api/apps
      - ./api/manage.py:/api/manage.py
      - ./api/requirements/base.txt:/api/requirements/base.txt
      - ./api/requirements/development.txt:/api/requirements/development.txt
      - ./api/scripts/dev-run.sh:/api/run.sh
      - ./api/pyproject.toml:/api/pyproject.toml
      - ./api/.flake8:/api/.flake8
      - ./api/conftest.py:/api/conftest.py
      - ./api/static:/api/static
      - ./api/media:/api/media
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  # app:
  #   build:
  #     context: app
  #     dockerfile: Dockerfile
  #   environment:
  #     - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./app:/app
  #     - /app/node_modules

volumes:
  db-data: